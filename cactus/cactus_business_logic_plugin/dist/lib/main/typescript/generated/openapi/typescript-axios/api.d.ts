/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface BondTransferDto
 */
export interface BondTransferDto {
    /**
     *
     * @type {string}
     * @memberof BondTransferDto
     */
    'receiver'?: string;
    /**
     *
     * @type {string}
     * @memberof BondTransferDto
     */
    'bondId'?: string;
}
/**
 *
 * @export
 * @interface CreateBondDto
 */
export interface CreateBondDto {
    /**
     *
     * @type {string}
     * @memberof CreateBondDto
     */
    'holder'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBondDto
     */
    'bondName'?: string;
    /**
     *
     * @type {number}
     * @memberof CreateBondDto
     */
    'faceValue'?: number;
    /**
     *
     * @type {number}
     * @memberof CreateBondDto
     */
    'couponRate'?: number;
    /**
     *
     * @type {number}
     * @memberof CreateBondDto
     */
    'yearsToMature'?: number;
    /**
     *
     * @type {number}
     * @memberof CreateBondDto
     */
    'paymentInterval'?: number;
}
/**
 *
 * @export
 * @interface CreateHtlcDto
 */
export interface CreateHtlcDto {
    /**
     *
     * @type {string}
     * @memberof CreateHtlcDto
     */
    'htlcId'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateHtlcDto
     */
    'bondId'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateHtlcDto
     */
    'receiver'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateHtlcDto
     */
    'escrow'?: string;
    /**
     *
     * @type {number}
     * @memberof CreateHtlcDto
     */
    'timeout'?: number;
    /**
     *
     * @type {string}
     * @memberof CreateHtlcDto
     */
    'currency'?: string;
    /**
     *
     * @type {number}
     * @memberof CreateHtlcDto
     */
    'amount'?: number;
    /**
     *
     * @type {string}
     * @memberof CreateHtlcDto
     */
    'hash'?: string;
}
/**
 *
 * @export
 * @interface RefundHtlcDto
 */
export interface RefundHtlcDto {
    /**
     *
     * @type {string}
     * @memberof RefundHtlcDto
     */
    'escrow'?: string;
    /**
     *
     * @type {string}
     * @memberof RefundHtlcDto
     */
    'htlcId'?: string;
}
/**
 *
 * @export
 * @interface WithdrawHtlcDto
 */
export interface WithdrawHtlcDto {
    /**
     *
     * @type {string}
     * @memberof WithdrawHtlcDto
     */
    'escrow'?: string;
    /**
     *
     * @type {string}
     * @memberof WithdrawHtlcDto
     */
    'htlcId'?: string;
    /**
     *
     * @type {string}
     * @memberof WithdrawHtlcDto
     */
    'secret'?: string;
}
/**
 * DefaultApi - axios parameter creator
 * @export
 */
export declare const DefaultApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateBondDto} [createBondDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndIssueBond: (createBondDto?: CreateBondDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {CreateHtlcDto} [createHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBondHtlc: (createHtlcDto?: CreateHtlcDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllHtlc: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBondById: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHoldingBonds: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHtlcById: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {RefundHtlcDto} [refundHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundBondHtlc: (refundHtlcDto?: RefundHtlcDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {BondTransferDto} [bondTransferDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transferBond: (bondTransferDto?: BondTransferDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {WithdrawHtlcDto} [withdrawHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    withdrawBondHtlc: (withdrawHtlcDto?: WithdrawHtlcDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DefaultApi - functional programming interface
 * @export
 */
export declare const DefaultApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateBondDto} [createBondDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndIssueBond(createBondDto?: CreateBondDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {CreateHtlcDto} [createHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBondHtlc(createHtlcDto?: CreateHtlcDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllHtlc(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBondById(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHoldingBonds(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHtlcById(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {RefundHtlcDto} [refundHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundBondHtlc(refundHtlcDto?: RefundHtlcDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {BondTransferDto} [bondTransferDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transferBond(bondTransferDto?: BondTransferDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {WithdrawHtlcDto} [withdrawHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    withdrawBondHtlc(withdrawHtlcDto?: WithdrawHtlcDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * DefaultApi - factory interface
 * @export
 */
export declare const DefaultApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {CreateBondDto} [createBondDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndIssueBond(createBondDto?: CreateBondDto, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {CreateHtlcDto} [createHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBondHtlc(createHtlcDto?: CreateHtlcDto, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllHtlc(options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBondById(id: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHoldingBonds(options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHtlcById(id: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {RefundHtlcDto} [refundHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundBondHtlc(refundHtlcDto?: RefundHtlcDto, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {BondTransferDto} [bondTransferDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transferBond(bondTransferDto?: BondTransferDto, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {WithdrawHtlcDto} [withdrawHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    withdrawBondHtlc(withdrawHtlcDto?: WithdrawHtlcDto, options?: any): AxiosPromise<object>;
};
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export declare class DefaultApi extends BaseAPI {
    /**
     *
     * @param {CreateBondDto} [createBondDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    createAndIssueBond(createBondDto?: CreateBondDto, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {CreateHtlcDto} [createHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    createBondHtlc(createHtlcDto?: CreateHtlcDto, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getAllHtlc(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getBondById(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getHoldingBonds(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {string}
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getHtlcById(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {RefundHtlcDto} [refundHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    refundBondHtlc(refundHtlcDto?: RefundHtlcDto, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {BondTransferDto} [bondTransferDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    transferBond(bondTransferDto?: BondTransferDto, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @param {WithdrawHtlcDto} [withdrawHtlcDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    withdrawBondHtlc(withdrawHtlcDto?: WithdrawHtlcDto, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
}
